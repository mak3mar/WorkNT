import sys
import os
# Акимкин Максим

# 1. Чтение элементов массива из файла, переданного в качестве аргумента командной строки.
# 2. Вычисление среднего числа массива, т.к. это число будет оптимальным для минимизации количества ходов.
# 3. Вычисление разницы между каждым числом массива и средним числом.
# 4. Вывод общей суммы этих различий, что будет являться минимальным количеством ходов.

# Функция для чтения чисел из файла
def read_numbers_from_file(file_path):
    with open(file_path, 'r') as f: # Открываем файл на чтение.
        # Считываем каждую строку, удаляем пробелы и преобразуем в число. Возвращаем список чисел.
        return [int(line.strip()) for line in f.readlines()] 

# Функция для вычисления медианы списка чисел
def find_median(nums):
    sorted_nums = sorted(nums)  # Сортируем список чисел.
    n = len(nums)               # Получаем количество чисел в списке.
    
    # Если количество элементов четное:
    if n % 2 == 0:
        # Возвращаем среднее значение двух центральных чисел.
        return (sorted_nums[n // 2 - 1] + sorted_nums[n // 2]) // 2
    else:  # Если количество элементов нечетное:
        # Возвращаем центральное число.
        return sorted_nums[n // 2]


# Функция для вычисления минимального количества ходов
def compute_moves(nums, median):
    # Считаем сумму разниц между каждым числом и медианой. Это и будет ответом.
    return sum(abs(num - median) for num in nums)

# Основное тело программы
if __name__ == "__main__":
    # Проверяем, что передано правильное количество аргументов
    if len(sys.argv) != 2:
        print("Необходимо передать путь до файла с числами!")
        sys.exit(1)
    
    file_path = sys.argv[1]

    # Проверка наличия файла
    if not os.path.exists(file_path):
        print("Файл не существует!")
        sys.exit(1)
    
    # Пытаемся прочитать данные из файла
    try:
        nums = read_numbers_from_file(file_path)
    except Exception as e:
        print("Ошибка при чтении файла:", e)
        sys.exit(1)
    
    median = find_median(nums)              # Находим медиану списка чисел.
    result = compute_moves(nums, median)    # Вычисляем минимальное количество ходов.
    
    print(result)   # Выводим результат на экран.
